# Namespace för att isolera resurser
apiVersion: v1
kind: Namespace
metadata:
  name: sportcenter
---
# PersistentVolume för delad volym
apiVersion: v1
kind: PersistentVolume
metadata:
  name: shared-pv
  namespace: sportcenter
spec:
  capacity:
    storage: 1Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: /tmp/hostpath-provisioner/sportcenter/shared-pvc-new
---
# PersistentVolumeClaim för delad volym
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: shared-pvc-new
  namespace: sportcenter
spec:
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 1Gi
---
# PersistentVolumeClaim för PostgreSQL
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: db-pvc
  namespace: sportcenter
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
---
# Deployment och Service för PostgreSQL
apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: sportcenter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: postgres
  template:
    metadata:
      labels:
        app: postgres
    spec:
      containers:
        - name: postgres
          image: postgres:15
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_USER
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_PASSWORD
            - name: POSTGRES_DB
              valueFrom:
                secretKeyRef:
                  name: db-secret
                  key: POSTGRES_DB

          volumeMounts:
            - name: db-storage
              mountPath: /var/lib/postgresql/data
            - name: init-sql
              mountPath: /docker-entrypoint-initdb.d
      volumes:
        - name: db-storage
          persistentVolumeClaim:
            claimName: db-pvc
        - name: init-sql
          configMap:
            name: postgres-init-sql
---
apiVersion: v1
kind: Service
metadata:
  name: postgres
  namespace: sportcenter
spec:
  ports:
    - port: 5432
      targetPort: 5432
  selector:
    app: postgres
---
# Deployment och Service för Backend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: backend
  namespace: sportcenter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
    spec:
      containers:
      - name: backend
        image: enkas1/devops2_backend:latest
        ports:
        - containerPort: 5000
        env:
        - name: DATABASE_HOST
          value: "postgres"
        - name: DATABASE_PORT
          value: "5432"
        - name: DATABASE_USER
          value: "postgres"
        - name: DATABASE_PASSWORD
          value: "Mydatabase1391"
        - name: DATABASE_NAME
          value: "postgres"
        volumeMounts:
        - name: shared-templates
          mountPath: /app/templates
      volumes:
      - name: shared-templates
        persistentVolumeClaim:
          claimName: shared-pvc-new
---
apiVersion: v1
kind: Service
metadata:
  name: backend
  namespace: sportcenter
spec:
  ports:
    - port: 5000
      targetPort: 5000
  selector:
    app: backend
---
# Deployment och Service för Frontend
apiVersion: apps/v1
kind: Deployment
metadata:
  name: frontend
  namespace: sportcenter
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      initContainers:
      - name: copy-html
        image: enkas1/devops2_frontend:latest
        command: ["sh", "-c", "cp -r /usr/share/nginx/html/templates/* /shared/templates/"]
        volumeMounts:
        - name: shared-templates
          mountPath: /shared/templates
      containers:
      - name: frontend
        image: enkas1/devops2_frontend:latest
        ports:
        - containerPort: 80
        volumeMounts:
        - name: shared-templates
          mountPath: /usr/share/nginx/html/templates
      volumes:
      - name: shared-templates
        persistentVolumeClaim:
          claimName: shared-pvc-new
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: sportcenter
spec:
  ports:
    - port: 80
      targetPort: 80
  selector:
    app: frontend
